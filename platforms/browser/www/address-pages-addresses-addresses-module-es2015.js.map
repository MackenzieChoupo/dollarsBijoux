{"version":3,"sources":["./src/app/address-pages/addresses/addresses.page.html","./src/app/address-pages/addresses/addresses.module.ts","./src/app/address-pages/addresses/addresses.page.scss","./src/app/address-pages/addresses/addresses.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0NAA2J,wBAAwB,uMAAuM,yBAAyB,qJAAqJ,oCAAoC,wGAAwG,oBAAoB,gNAAgN,iBAAiB,8MAA8M,wBAAwB,yLAAyL,sBAAsB,sMAAsM,sBAAsB,8LAA8L,kBAAkB,yRAAyR,oBAAoB,iRAAiR,mBAAmB,mMAAmM,yBAAyB,mSAAmS,2BAA2B,kEAAkE,sCAAsC,uGAAuG,oBAAoB,8MAA8M,iBAAiB,4MAA4M,wBAAwB,+LAA+L,sBAAsB,4MAA4M,sBAAsB,oMAAoM,kBAAkB,sRAAsR,oBAAoB,8QAA8Q,mBAAmB,iMAAiM,yBAAyB,+RAA+R,2BAA2B,kC;;;;;;;;;;;;;;;;;;;;;;;ACA7uK;AACM;AACF;AACU;AAEV;AAEI;AAEjD,2BAA2B;AAC0B;AAErD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAYF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAI;AAAvB,mBAAmB;IAV/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,kEAAW;SACZ;QACD,YAAY,EAAE,CAAC,6DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAI;AAAJ;;;;;;;;;;;;;AC7BhC;AAAe,+EAAgB,oBAAoB,uBAAuB,GAAG,6BAA6B,0BAA0B,GAAG,uCAAuC,gBAAgB,GAAG,6CAA6C,2lC;;;;;;;;;;;;;;;;;;;;;;;;;ACA5L;AACT;AAC2B;AACc;AACV;AACD;AACiB;AACF;AACN;AAOhF,IAAa,aAAa,GAA1B,MAAa,aAAa;IA6BxB,YACS,OAAsB,EACtB,MAAyB,EACzB,SAA0B,EAC1B,MAAqB,EACrB,OAAgB,EAChB,MAAc,EACd,OAAuB,EACvB,QAA6B;QAP7B,YAAO,GAAP,OAAO,CAAe;QACtB,WAAM,GAAN,MAAM,CAAmB;QACzB,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAS;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,aAAQ,GAAR,QAAQ,CAAqB;QApCtC,YAAO,GAAG;YACR,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;SACV,CAAC;QACF,uBAAkB,GAAG,EAAE,CAAC;QACxB,qBAAgB,GAAG,EAAE,CAAC;QACtB,aAAQ,GAAG;YACT,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,wBAAmB,GAAG,EAAE,CAAC;QACzB,sBAAiB,GAAG,EAAE,CAAC;QAWrB,0BAA0B;QAC1B,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAEhD,IAAI,IAAI,IAAI,gBAAgB,EAAE;gBAC5B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC;gBACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;gBACpC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;aAE7B;YACD,IAAI,IAAI,IAAI,eAAe,EAAE;gBAC3B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC;gBACrC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;QAEH,mBAAmB;QAEnB,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAG9C,IAAI,IAAI,IAAI,gBAAgB,EAAE;gBAC5B,IAAI,KAAK,IAAI,OAAO,EAAE;oBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC;oBAC9B,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;iBAClC;qBAEI;oBACH,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBAClC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,IAAI;iBACpC;aAEF;YACD,IAAI,IAAI,IAAI,eAAe,EAAE;gBAC3B,IAAI,KAAK,IAAI,OAAO,EAAE;oBACpB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;oBAC7B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;iBACjC;qBAEI;oBACH,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC;iBACpC;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,GAAG;YACN,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YACrF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,GAAG,GAAG,IAAI;YACd,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,GAAG;YACN,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YACrF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,GAAG,GAAG,IAAI;YAEd,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IACK,iBAAiB,CAAC,KAAK;;YAC3B,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACtC,SAAS,EAAE,mGAAiB;gBAC5B,cAAc,EAAE;oBACd,IAAI,EAAE,KAAK;iBACZ;aACF,CAAC,CAAC;YACH,OAAO,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;IACK,cAAc,CAAC,KAAK;;YACxB,IAAI,EAAE,GAAG,CAAC,KAAK,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAEpF,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACtC,SAAS,EAAE,6FAAe;gBAC1B,cAAc,EAAE;oBACd,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE;iBACpB;aACF,CAAC,CAAC;YACH,OAAO,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IACD,gBAAgB;QAEd,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,IAAI,EAAE;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACnG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAExI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC;YAChD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACjG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACtI;IACH,CAAC;IACD,QAAQ;IAER,CAAC;CACF;;YAlImB,4DAAa;YACd,+FAAiB;YACd,8DAAe;YAClB,iFAAa;YACZ,sDAAO;YACR,qDAAM;YACL,oFAAc;YACb,qGAAmB;;AArC3B,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,mOAAoC;;KAErC,CAAC;2EA+BkB,4DAAa;QACd,+FAAiB;QACd,8DAAe;QAClB,iFAAa;QACZ,sDAAO;QACR,qDAAM;QACL,oFAAc;QACb,qGAAmB;GArC3B,aAAa,CAgKzB;AAhKyB","file":"address-pages-addresses-addresses-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-menu-button slot=\\\"start\\\">\\n      <ion-icon name=\\\"menu\\\"></ion-icon>\\n    </ion-menu-button>\\n    <ion-title> {{'Addresse'| translate }} </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" routerLink=\\\"/cart\\\" routerDirection=\\\"forward\\\">\\n        <ion-icon name=\\\"basket\\\"></ion-icon>\\n        <ion-badge>{{shared.cartTotalItems()}}</ion-badge>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <!-- For Shipping Address -->\\n  <p>\\n    {{'Adresse de livraison'| translate }}\\n  </p>\\n\\n  <form #shippingForm=\\\"ngForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Prénom'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_firstname\\\" [(ngModel)]=\\\"shipping.first_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Nom'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_lastname\\\" [(ngModel)]=\\\"shipping.last_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Entreprise'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"company\\\" [(ngModel)]=\\\"shipping.company\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Addresse'|translate}} 1</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"shipping.address_1\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Addresse'|translate}} 2</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"address2\\\" [(ngModel)]=\\\"shipping.address_2\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Pays'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_country\\\" tappable (click)=\\\"selectCountryPage('shippingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"shippingCountryName\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Région'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" required name=\\\"shipping_zone\\\" tappable (click)=\\\"selectZonePage('shippingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"shippingStateName\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Ville'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_city\\\" [(ngModel)]=\\\"shipping.city\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Code postal'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"shipping_postcode\\\" [(ngModel)]=\\\"shipping.postcode\\\" required></ion-input>\\n    </ion-item>\\n  </form>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\" (click)=\\\"updateShippingAddress()\\\" [disabled]=\\\"!shippingForm.form.valid\\\">\\n    {{'Mettre à jour'|translate}}\\n  </ion-button>\\n\\n  <!-- For Billing Address -->\\n  <p>\\n    {{'Adresse de facturation'| translate }}\\n  </p>\\n\\n  <form #billingForm=\\\"ngForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Prénom'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_firstname\\\" [(ngModel)]=\\\"billing.first_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Nom'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_lastname\\\" [(ngModel)]=\\\"billing.last_name\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Entreprise'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billingcompany\\\" [(ngModel)]=\\\"billing.company\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Addresse'|translate}} 1</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billingaddress\\\" [(ngModel)]=\\\"billing.address_1\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Addresse'|translate}} 2</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billingaddress2\\\" [(ngModel)]=\\\"billing.address_2\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Pays'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_country\\\" tappable (click)=\\\"selectCountryPage('billingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"billingCountryName\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Région'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" required name=\\\"billing_zone\\\" tappable (click)=\\\"selectZonePage('billingUpdate')\\\" readonly\\n        [(ngModel)]=\\\"billingStateName\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Ville'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_city\\\" [(ngModel)]=\\\"billing.city\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{'Code postal'|translate}}</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"billing_postcode\\\" [(ngModel)]=\\\"billing.postcode\\\" required></ion-input>\\n    </ion-item>\\n  </form>\\n  <ion-button expand=\\\"full\\\" color=\\\"secondary\\\" (click)=\\\"updateBillingAddress()\\\" [disabled]=\\\"!billingForm.form.valid\\\">\\n    {{'Mettre à jour'|translate}}\\n  </ion-button>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddressesPage } from './addresses.page';\n\n// For Translation Language\nimport { PipesModule } from 'src/pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddressesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    PipesModule\n  ],\n  declarations: [AddressesPage]\n})\nexport class AddressesPageModule { }\n","export default \"ion-content p {\\n  font-size: 20px;\\n  text-align: center;\\n}\\nion-content form ion-item {\\n  --background: #fafafa;\\n}\\nion-content form ion-item ion-label {\\n  color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21vcmVsL0J1cmVhdS9zb2x1dGlvbiBhbmRyb2lkIGRvbGxhcnMgYmlqb3V4L0FwcCBTb3VyY2UgQ29kZS9zcmMvYXBwL2FkZHJlc3MtcGFnZXMvYWRkcmVzc2VzL2FkZHJlc3Nlcy5wYWdlLnNjc3MiLCJzcmMvYXBwL2FkZHJlc3MtcGFnZXMvYWRkcmVzc2VzL2FkZHJlc3Nlcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUk7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUNEUjtBRElRO0VBQ0kscUJBQUE7QUNGWjtBREdZO0VBQ0ksV0FBQTtBQ0RoQiIsImZpbGUiOiJzcmMvYXBwL2FkZHJlc3MtcGFnZXMvYWRkcmVzc2VzL2FkZHJlc3Nlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW9uLWNvbnRlbnR7XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBmb3Jte1xyXG4gICAgICAgIGlvbi1pdGVte1xyXG4gICAgICAgICAgICAtLWJhY2tncm91bmQ6ICNmYWZhZmE7XHJcbiAgICAgICAgICAgIGlvbi1sYWJlbHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBncmF5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW9uLWNvbnRlbnQgcCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuaW9uLWNvbnRlbnQgZm9ybSBpb24taXRlbSB7XG4gIC0tYmFja2dyb3VuZDogI2ZhZmFmYTtcbn1cbmlvbi1jb250ZW50IGZvcm0gaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgY29sb3I6IGdyYXk7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ConfigService } from 'src/providers/config/config.service';\nimport { SharedDataService } from 'src/providers/shared-data/shared-data.service';\nimport { ModalController, NavController, Events } from '@ionic/angular';\nimport { LoadingService } from 'src/providers/loading/loading.service';\nimport { LocationDataService } from 'src/providers/location-data/location-data.service';\nimport { SelectCountryPage } from 'src/app/modals/select-country/select-country.page';\nimport { SelectZonesPage } from 'src/app/modals/select-zones/select-zones.page';\n\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.page.html',\n  styleUrls: ['./addresses.page.scss'],\n})\nexport class AddressesPage implements OnInit {\n  billing = {\n    first_name: '',\n    last_name: '',\n    company: '',\n    address_1: '',\n    address_2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    country: '',\n    email: '',\n    phone: ''\n  };\n  billingCountryName = \"\";\n  billingStateName = \"\";\n  shipping = {\n    first_name: '',\n    last_name: '',\n    company: '',\n    address_1: '',\n    address_2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    country: ''\n  };\n  shippingCountryName = \"\";\n  shippingStateName = \"\";\n  constructor(\n    public navCtrl: NavController,\n    public shared: SharedDataService,\n    public modalCtrl: ModalController,\n    public config: ConfigService,\n    public storage: Storage,\n    public events: Events,\n    public loading: LoadingService,\n    public location: LocationDataService) {\n\n    //when country is selected\n    events.subscribe('countryChange', (page, value) => {\n\n      if (page == \"shippingUpdate\") {\n        this.shippingCountryName = value.name;\n        this.shipping.country = value.value;\n        this.shipping.state = null;\n        this.shipping.city = null;\n        this.shipping.postcode = null;\n        this.shippingStateName = \"\";\n\n      }\n      if (page == \"billingUpdate\") {\n        this.billingCountryName = value.name;\n        this.billing.country = value.value;\n        this.billing.state = null;\n        this.billing.city = null;\n        this.billing.postcode = null;\n        this.billingStateName = \"\";\n      }\n    });\n\n    //state is selected\n\n    events.subscribe('stateChange', (page, value) => {\n\n\n      if (page == \"shippingUpdate\") {\n        if (value == 'other') {\n          console.log(page + value);\n          this.shipping.state = 'other';\n          this.shippingStateName = \"other\";\n        }\n\n        else {\n          this.shipping.state = value.value;\n          this.shippingStateName = value.name\n        }\n\n      }\n      if (page == \"billingUpdate\") {\n        if (value == 'other') {\n          this.billing.state = 'other';\n          this.billingStateName = \"other\";\n        }\n\n        else {\n          this.billing.state = value.value;\n          this.billingStateName = value.name;\n        }\n      }\n    });\n  }\n\n  updateBillingAddress() {\n    this.loading.show();\n    var d = {\n      billing: this.billing\n    };\n    this.config.putAsync(\"customers/\" + this.shared.customerData.id, d).then((data: any) => {\n      this.loading.hide();\n      let dat = data\n      this.shared.customerData.billing = dat.billing;\n      this.storage.set('customerData', this.shared.customerData);\n      this.shared.toast(\"Billing Address Updated\");\n    });\n  }\n  updateShippingAddress() {\n    this.loading.show();\n    var d = {\n      shipping: this.shipping\n    };\n    this.config.putAsync(\"customers/\" + this.shared.customerData.id, d).then((data: any) => {\n      this.loading.hide();\n      let dat = data\n\n      this.shared.customerData.shipping = dat.shipping;\n      console.log(\"customer data\");\n      console.log(this.shared.customerData);\n      this.storage.set('customerData', this.shared.customerData);\n      this.shared.toast(\"Shipping Address Updated\");\n    });\n  }\n  async selectCountryPage(value) {\n    let modal = await this.modalCtrl.create({\n      component: SelectCountryPage,\n      componentProps: {\n        page: value\n      }\n    });\n    return await modal.present();\n  }\n  async selectZonePage(value) {\n    let id = (value == \"shippingUpdate\") ? this.shipping.country : this.billing.country;\n\n    let modal = await this.modalCtrl.create({\n      component: SelectZonesPage,\n      componentProps: {\n        page: value, id: id\n      }\n    });\n    return await modal.present();\n  }\n  openCart() {\n    this.navCtrl.navigateForward(\"cart\");\n  }\n  ionViewWillEnter() {\n\n    if (this.shared.customerData.id != null) {\n      this.shipping = this.shared.customerData.shipping;\n      this.shippingCountryName = this.location.getCountryName(this.shared.customerData.shipping.country);\n      this.shippingStateName = this.location.getStateName(this.shared.customerData.shipping.country, this.shared.customerData.shipping.state);\n\n      this.billing = this.shared.customerData.billing;\n      this.billingCountryName = this.location.getCountryName(this.shared.customerData.billing.country);\n      this.billingStateName = this.location.getStateName(this.shared.customerData.billing.country, this.shared.customerData.billing.state);\n    }\n  }\n  ngOnInit() {\n\n  }\n}\n"],"sourceRoot":"webpack:///"}